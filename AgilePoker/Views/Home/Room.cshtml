@model AgilePoker.Models.Room
@{
    ViewBag.Title = @Model.PokerRoom.TableName;
}
<hgroup class="title">
    <h1>@Model.PokerRoom.TableName</h1>
</hgroup>

<div class="row">
    <div class="col-md-5 col-sm-5">
        @using (Html.BeginForm())
        {
            if (@Model.PokerRoom.AgileMasterPlayer.UniqueName == User.Identity.Name)
            {
                if (@Model.PokerRoom.ShowHands)
                {
                    <input type="submit" value="Show Hands" name="action:ShowVotes" disabled="disabled" />
                }
                else
                {
                    <input type="submit" value="Show Hands" name="action:ShowVotes"  />
                }
                <input type="submit" value="New Deal" name="action:ReVote"/>
            }
            <!-- TODO: Ability to have Refresh pushed to the UI via SignalR -->
            <input type="submit" value="Refresh Screen" name="action:Refresh" title="Future SignalR"/>
            <br/>
            <br/>

            if (Model.SelectedCard != null)
            {
                <img src="@Url.Content(@Model.SelectedCard.PictureUrl)" title="@Model.SelectedCard.ToolTip" alt="@Model.SelectedCard.ToolTip"/>
                <br/>
            }

            @Html.LabelFor(model => model.SelectedCard)<br/>
            @Html.DropDownListFor(model => model.SelectedCardValue, new SelectList(Model.PlayingCards, "Value", "ToolTip", Model.SelectedCardValue))
            <br/>
            <br/>
            <input type="submit" value="Vote!" name="action:SelectCard" id="action:SelectCard"/>
        }
    </div>
    <br/>
    <div class="col-md-7 col-sm-7">
            
        <label>Players</label><br/>
        <div id="divUsers">
            @foreach (var user in Model.PokerRoom.Players)
            {
                if (user.SelectedCard != null)
                {
                    @user.PreferredName
                    if (@Model.PokerRoom.ShowHands)
                    {
                        <text> - </text>
                        <img src="@Url.Content(@user.SelectedCard.PictureUrl)" title="@user.SelectedCard.ToolTip" alt="@user.SelectedCard.ToolTip" width="30"/>
                    }
                    else
                    {
                        <text> - Voted</text>
                    }
                    <br />
                }
                else
                {
                    @user.PreferredName
                    <text> - No Vote Yet</text>
                }
            }
        </div>
        
        <div id="signalRUpdateTable">
            <table border="1">
            <thead>
                <tr><th>Player</th><th>Hand</th></tr>
            </thead>
            <tbody>
                <tr><td colspan="2">loading...</td></tr>
            </tbody>
        </table>
        </div>
    </div>
</div>

<script src="../../Scripts/jquery.signalR-2.0.3.min.js"></script>
<script src="signalr/hubs"></script>
<script type="text/javascript">
    $(function () {

        var agilePokerHub = $.connection.AgilePokerHub;
        var tableName = '@Model.PokerRoom.TableName';
        var $updateTable = $('#signalRUpdateTable');
        var $updateTableBody = $updateTable.find('tbody');
        var rowTemplate = '<tr><td>{Player}</td><td>{Hand}</td></tr>';

        var playerHands = '@Model.Hands';

        $.connection.hub.start(function () {
            // TODO: Get groups working correctly
            agilePokerHub.server.join(tableName);
        });

        function init() {
            alert("Init() Called!");
            agilePokerHub.server.getAllHands(tableName).done(function (hands) {
                updateHands(hands);
            });
        }

        agilePokerHub.client.broadcastPokerHands = function (hands) {
            alert("broadcastPokerHands " + hands.length);
            updateHands(hands);
        };

        $.connection.hub.start().done(function() {
            $('#action:SelectCard').click(playHand());
            
            // TODO: Do we need to call init() here?
            init();
        });
        
        function playHand() {
            agilePokerHub.server.playHand(tableName, '@User.Identity.Name', $('#SelectedCardValue').val());
        }
        
        function updateHands(hands) {
            alert("updateHands 1");
            // TODO: Update hands panel based on data hands collection
            playerHands = hands;
            $updateTableBody.empty();
            $.each(playerHands, function () {
                alert("updateHands 3");
                if (item != undefined) {
                    alert("hand 1!");
                    $updateTableBody.append(rowTemplate.replace('{Player}', this.PreferredName).replace(('{Hand}', this.SelectedCard.ToolTip)));
                    alert("hand 2!");
                }
            });
        }
    });
</script>
